class Counter {
    init() {
        this.counter = 0;

        fun count() {
            this.counter = this.counter + 1;
        }

        this.count = count;
    }

    // count() {
    //     this.counter = this.counter + 1;
    // }
}

var counter = Counter();
var methodCallsNum = 1000;

var unoptimizedStart = clock();
var i = 0;

while (i < methodCallsNum) {
    var count = counter.count;
    count();
    i = i + 1;
}

var unoptimizedBenchmark = clock() - unoptimizedStart;

var optimizedStart = clock();
var i = 0;

while (i < methodCallsNum) {
    counter.count();
    i = i + 1;
}

var optimizedBenchmark = clock() - optimizedStart;

print("The optimization makes it ${string(unoptimizedBenchmark / optimizedBenchmark)} times faster");
