print(">> blocks (30, 30)");

var closure;

{
  var x = 30;

  fun funny() {
    print(x);
  }

  closure = funny;

  closure();
}

closure();

print("<<");

print(">> higher-order functions (1, 2, <fn counter>)");

fun makeCounter(i) {
  fun counter() {
    i = i + 1;
    return i;
  }

  return counter;
}

var counter1 = makeCounter(0);

print(counter1());
print(counter1());
print(counter1);

print("<<");

print(">> module pattern (yosef, mostafa)");

var getName;
var setName;

fun Person(name) {
  fun getPersonName() {
    return name;
  }

  fun setPersonName(next) {
    name = next;
  }

  getName = getPersonName;
  setName = setPersonName;
}

Person("yosef");

print(getName());
setName("mostafa");
print(getName());

print("<<");
